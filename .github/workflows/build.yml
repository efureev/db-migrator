name: Build
on: [ push ]
env:
  APP_NAME: 'migrate'

jobs:
  docker-image:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - { uses: gacts/github-slug@v1, id: slug }

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with: { username: '${{ secrets.DOCKER_HUB_USER }}', password: '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}' }

      - uses: docker/login-action@v3
        with: { registry: ghcr.io, username: '${{ github.actor }}', password: '${{ github.token }}' }

      - run: |
          echo $GITHUB_REPOSITORY
          basename $GITHUB_REPOSITORY
          echo $(basename $GITHUB_REPOSITORY)
          echo "${{ steps.slug.outputs.version }}"
          echo "$APP_NAME"
          echo "${{env.APP_NAME}}"

      - name: Build App for the Scratch
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.ci/Dockerfile
          push: true
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v8,linux/arm/v7
          build-args: |
            TARGET=gh
            VERSION_TAG=${{ steps.slug.outputs.version }}
            APP_NAME=${{env.APP_NAME}}
          tags: |
            feugene/${{env.APP_NAME}}:${{ steps.slug.outputs.version }}
            feugene/${{env.APP_NAME}}:latest
            ghcr.io/${{ github.actor }}/${{env.APP_NAME}}:${{ steps.slug.outputs.version }}
            ghcr.io/${{ github.actor }}/${{env.APP_NAME}}:latest

      - name: Build App for the Alpine
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.ci/Dockerfile
          push: true
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v8
          build-args: |
            BASE_IMAGE=alpine:latest
            TARGET=gh
            VERSION_TAG=${{ steps.slug.outputs.version }}
            APP_NAME=${{env.APP_NAME}}
          tags: |
            feugene/${{env.APP_NAME}}:${{ steps.slug.outputs.version }}-alpine
            feugene/${{env.APP_NAME}}:latest-alpine
            ghcr.io/${{ github.actor }}/${{env.APP_NAME}}:${{ steps.slug.outputs.version }}-alpine
            ghcr.io/${{ github.actor }}/${{env.APP_NAME}}:latest-alpine

  binary-files:
    name: Publish the binary file (${{ matrix.platform }})
    runs-on: ubuntu-latest
    needs: [ docker-image ]
    strategy:
      matrix:
        platform: # the list should be the same as the platforms listed above
          - linux/amd64
          - linux/386
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v8
    steps:
      - uses: actions/checkout@v4

      - { uses: gacts/github-slug@v1, id: slug }

      - uses: docker/login-action@v3
        with: { registry: ghcr.io, username: '${{ github.actor }}', password: '${{ github.token }}' }

      - run: |
          docker pull --platform "${{ matrix.platform }}" ghcr.io/${{ github.actor }}/${{ env.APP_NAME }}:${{ steps.slug.outputs.version }}
          docker create --name app --platform "${{ matrix.platform }}" ghcr.io/${{ github.actor }}/${{ env.APP_NAME }}:${{ steps.slug.outputs.version }}
          docker cp app:/bin/${{ env.APP_NAME }} ./${{ env.APP_NAME }}

      - { uses: gacts/github-slug@v1, id: filename, with: { to-slug: '${{ env.APP_NAME }}-${{ matrix.platform }}' } }

      - name: Upload the binary file to the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: ./${{ env.APP_NAME }}
          asset_name: ${{ steps.filename.outputs.slug }}
          tag: ${{ github.ref }}